pipeline {
    agent any

    environment {
        DOCKER_REGISTRY = "mdn753"
        REGISTRY_CREDENTIALS = "dockerhub-credentials-id"
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'devops', url: 'https://github.com/m-elhamlaoui/Keplereum.git'
            }
        }

        stage('Build & Push Microservices') {
            parallel {
                stage('ConfigServer') {
                    steps {
                        script {
                            buildAndPush(this, 'ConfigServer')
                        }
                    }
                }
                stage('DiscoveryServer') {
                    steps {
                        script {
                            buildAndPush(this, 'DiscoveryServer')
                        }
                    }
                }
                stage('ApiGateway') {
                    steps {
                        script {
                            buildAndPush(this, 'ApiGateway')
                        }
                    }
                }
                stage('Blockchain_Service') {
                    steps {
                        script {
                            buildAndPush(this, 'Blockchain_Service')
                        }
                    }
                }
                stage('Satellites_Service') {
                    steps {
                        script {
                            buildAndPush(this, 'Satellites_Service')
                        }
                    }
                }
                stage('User_GroundStation_Service') {
                    steps {
                        script {
                            buildAndPush(this, 'User_GroundStation_Service')
                        }
                    }
                }
            }
        }
    }
}

def buildAndPush(context, serviceName) {
    context.dir("Backend_microservice/${serviceName}") {
        context.docker.withRegistry('https://index.docker.io/v1/', env.REGISTRY_CREDENTIALS) {
            def image = context.docker.build("${env.DOCKER_REGISTRY}/${serviceName.toLowerCase()}:${env.BUILD_NUMBER}")
            image.push()
            image.push("latest")
        }
    }
}
