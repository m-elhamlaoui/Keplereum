package com.keplereum.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GroundStationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGroundStationAllPropertiesEquals(GroundStation expected, GroundStation actual) {
        assertGroundStationAutoGeneratedPropertiesEquals(expected, actual);
        assertGroundStationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGroundStationAllUpdatablePropertiesEquals(GroundStation expected, GroundStation actual) {
        assertGroundStationUpdatableFieldsEquals(expected, actual);
        assertGroundStationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGroundStationAutoGeneratedPropertiesEquals(GroundStation expected, GroundStation actual) {
        assertThat(actual)
            .as("Verify GroundStation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGroundStationUpdatableFieldsEquals(GroundStation expected, GroundStation actual) {
        assertThat(actual)
            .as("Verify GroundStation relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getCountry()).as("check country").isEqualTo(expected.getCountry()))
            .satisfies(a -> assertThat(a.getContactEmail()).as("check contactEmail").isEqualTo(expected.getContactEmail()))
            .satisfies(a -> assertThat(a.getAccessLevel()).as("check accessLevel").isEqualTo(expected.getAccessLevel()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getLatitude()).as("check latitude").isEqualTo(expected.getLatitude()))
            .satisfies(a -> assertThat(a.getLongitude()).as("check longitude").isEqualTo(expected.getLongitude()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGroundStationUpdatableRelationshipsEquals(GroundStation expected, GroundStation actual) {
        // empty method
    }
}
