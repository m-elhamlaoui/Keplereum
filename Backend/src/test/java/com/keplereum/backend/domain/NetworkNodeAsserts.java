package com.keplereum.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class NetworkNodeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNetworkNodeAllPropertiesEquals(NetworkNode expected, NetworkNode actual) {
        assertNetworkNodeAutoGeneratedPropertiesEquals(expected, actual);
        assertNetworkNodeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNetworkNodeAllUpdatablePropertiesEquals(NetworkNode expected, NetworkNode actual) {
        assertNetworkNodeUpdatableFieldsEquals(expected, actual);
        assertNetworkNodeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNetworkNodeAutoGeneratedPropertiesEquals(NetworkNode expected, NetworkNode actual) {
        assertThat(actual)
            .as("Verify NetworkNode auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNetworkNodeUpdatableFieldsEquals(NetworkNode expected, NetworkNode actual) {
        assertThat(actual)
            .as("Verify NetworkNode relevant properties")
            .satisfies(a -> assertThat(a.getPublicKey()).as("check publicKey").isEqualTo(expected.getPublicKey()))
            .satisfies(a -> assertThat(a.getAuthorityStatus()).as("check authorityStatus").isEqualTo(expected.getAuthorityStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertNetworkNodeUpdatableRelationshipsEquals(NetworkNode expected, NetworkNode actual) {
        assertThat(actual)
            .as("Verify NetworkNode relationships")
            .satisfies(a -> assertThat(a.getSatellite()).as("check satellite").isEqualTo(expected.getSatellite()))
            .satisfies(a -> assertThat(a.getBlockTransactions()).as("check blockTransactions").isEqualTo(expected.getBlockTransactions()));
    }
}
