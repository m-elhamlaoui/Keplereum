package com.keplereum.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ConfirmationAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfirmationAllPropertiesEquals(Confirmation expected, Confirmation actual) {
        assertConfirmationAutoGeneratedPropertiesEquals(expected, actual);
        assertConfirmationAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfirmationAllUpdatablePropertiesEquals(Confirmation expected, Confirmation actual) {
        assertConfirmationUpdatableFieldsEquals(expected, actual);
        assertConfirmationUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfirmationAutoGeneratedPropertiesEquals(Confirmation expected, Confirmation actual) {
        assertThat(actual)
            .as("Verify Confirmation auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfirmationUpdatableFieldsEquals(Confirmation expected, Confirmation actual) {
        assertThat(actual)
            .as("Verify Confirmation relevant properties")
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertConfirmationUpdatableRelationshipsEquals(Confirmation expected, Confirmation actual) {
        assertThat(actual)
            .as("Verify Confirmation relationships")
            .satisfies(a -> assertThat(a.getEvent()).as("check event").isEqualTo(expected.getEvent()))
            .satisfies(a -> assertThat(a.getAlert()).as("check alert").isEqualTo(expected.getAlert()));
    }
}
