package com.keplereum.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ValidatorActionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidatorActionAllPropertiesEquals(ValidatorAction expected, ValidatorAction actual) {
        assertValidatorActionAutoGeneratedPropertiesEquals(expected, actual);
        assertValidatorActionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidatorActionAllUpdatablePropertiesEquals(ValidatorAction expected, ValidatorAction actual) {
        assertValidatorActionUpdatableFieldsEquals(expected, actual);
        assertValidatorActionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidatorActionAutoGeneratedPropertiesEquals(ValidatorAction expected, ValidatorAction actual) {
        assertThat(actual)
            .as("Verify ValidatorAction auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidatorActionUpdatableFieldsEquals(ValidatorAction expected, ValidatorAction actual) {
        assertThat(actual)
            .as("Verify ValidatorAction relevant properties")
            .satisfies(a -> assertThat(a.getActionType()).as("check actionType").isEqualTo(expected.getActionType()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertValidatorActionUpdatableRelationshipsEquals(ValidatorAction expected, ValidatorAction actual) {
        assertThat(actual)
            .as("Verify ValidatorAction relationships")
            .satisfies(a -> assertThat(a.getEvent()).as("check event").isEqualTo(expected.getEvent()))
            .satisfies(a -> assertThat(a.getAlert()).as("check alert").isEqualTo(expected.getAlert()));
    }
}
