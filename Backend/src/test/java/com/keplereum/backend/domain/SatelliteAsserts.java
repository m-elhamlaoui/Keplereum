package com.keplereum.backend.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SatelliteAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSatelliteAllPropertiesEquals(Satellite expected, Satellite actual) {
        assertSatelliteAutoGeneratedPropertiesEquals(expected, actual);
        assertSatelliteAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSatelliteAllUpdatablePropertiesEquals(Satellite expected, Satellite actual) {
        assertSatelliteUpdatableFieldsEquals(expected, actual);
        assertSatelliteUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSatelliteAutoGeneratedPropertiesEquals(Satellite expected, Satellite actual) {
        assertThat(actual)
            .as("Verify Satellite auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSatelliteUpdatableFieldsEquals(Satellite expected, Satellite actual) {
        assertThat(actual)
            .as("Verify Satellite relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getLaunchDate()).as("check launchDate").isEqualTo(expected.getLaunchDate()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSatelliteUpdatableRelationshipsEquals(Satellite expected, Satellite actual) {
        assertThat(actual)
            .as("Verify Satellite relationships")
            .satisfies(a -> assertThat(a.getModel()).as("check model").isEqualTo(expected.getModel()))
            .satisfies(a -> assertThat(a.getGroundStation()).as("check groundStation").isEqualTo(expected.getGroundStation()));
    }
}
